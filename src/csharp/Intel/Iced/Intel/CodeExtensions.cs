// SPDX-License-Identifier: MIT
// Copyright (C) 2018-present iced project and contributors

namespace Iced.Intel {
	static class CodeExtensions {
		public static bool IgnoresSegment(this Code code) {
			switch (code) {
			// GENERATOR-BEGIN: IgnoresSegmentTable
			// ‚ö†Ô∏èThis was generated by GENERATOR!ü¶π‚Äç‚ôÇÔ∏è
			case Code.Lea_r16_m:
			case Code.Lea_r32_m:
			case Code.Lea_r64_m:
			case Code.Bndcl_bnd_rm32:
			case Code.Bndcl_bnd_rm64:
			case Code.Bndcu_bnd_rm32:
			case Code.Bndcu_bnd_rm64:
			case Code.Bndmk_bnd_m32:
			case Code.Bndmk_bnd_m64:
			case Code.Bndcn_bnd_rm32:
			case Code.Bndcn_bnd_rm64:
				return true;
			// GENERATOR-END: IgnoresSegmentTable
			default:
				return false;
			}
		}

		public static bool IgnoresIndex(this Code code) {
			switch (code) {
			// GENERATOR-BEGIN: IgnoresIndexTable
			// ‚ö†Ô∏èThis was generated by GENERATOR!ü¶π‚Äç‚ôÇÔ∏è
			case Code.Bndldx_bnd_mib:
			case Code.Bndstx_mib_bnd:
				return true;
			// GENERATOR-END: IgnoresIndexTable
			default:
				return false;
			}
		}

		public static bool IsTileStrideIndex(this Code code) {
			switch (code) {
			// GENERATOR-BEGIN: TileStrideIndexTable
			// ‚ö†Ô∏èThis was generated by GENERATOR!ü¶π‚Äç‚ôÇÔ∏è
#if !NO_VEX
			case Code.VEX_Tileloaddt1_tmm_sibmem:
			case Code.VEX_Tilestored_sibmem_tmm:
			case Code.VEX_Tileloadd_tmm_sibmem:
				return true;
#endif
			// GENERATOR-END: TileStrideIndexTable
			default:
				return false;
			}
		}

		public static bool IsStringOp(this Code code) {
			switch (code) {
			// GENERATOR-BEGIN: IsStringOpTable
			// ‚ö†Ô∏èThis was generated by GENERATOR!ü¶π‚Äç‚ôÇÔ∏è
			case Code.Insb_m8_DX:
			case Code.Insw_m16_DX:
			case Code.Insd_m32_DX:
			case Code.Outsb_DX_m8:
			case Code.Outsw_DX_m16:
			case Code.Outsd_DX_m32:
			case Code.Movsb_m8_m8:
			case Code.Movsw_m16_m16:
			case Code.Movsd_m32_m32:
			case Code.Movsq_m64_m64:
			case Code.Cmpsb_m8_m8:
			case Code.Cmpsw_m16_m16:
			case Code.Cmpsd_m32_m32:
			case Code.Cmpsq_m64_m64:
			case Code.Stosb_m8_AL:
			case Code.Stosw_m16_AX:
			case Code.Stosd_m32_EAX:
			case Code.Stosq_m64_RAX:
			case Code.Lodsb_AL_m8:
			case Code.Lodsw_AX_m16:
			case Code.Lodsd_EAX_m32:
			case Code.Lodsq_RAX_m64:
			case Code.Scasb_AL_m8:
			case Code.Scasw_AX_m16:
			case Code.Scasd_EAX_m32:
			case Code.Scasq_RAX_m64:
				return true;
			// GENERATOR-END: IsStringOpTable
				default:
					return false;
			}
		}
	}
}
