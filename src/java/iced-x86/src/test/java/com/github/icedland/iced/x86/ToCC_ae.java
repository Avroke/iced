// SPDX-License-Identifier: MIT
// Copyright (C) 2018-present iced project and contributors

// ‚ö†Ô∏èThis file was generated by GENERATOR!ü¶π‚Äç‚ôÇÔ∏è

package com.github.icedland.iced.x86;

import java.util.HashMap;
import java.util.Iterator;

import com.github.icedland.iced.x86.fmt.CC_ae;

public final class ToCC_ae {
	static Integer tryGet(String key) {
		return map.get(key);
	}

	static Integer get(String key) {
		Integer value = tryGet(key);
		if (value == null)
			throw new UnsupportedOperationException(String.format("Couldn't find enum variant CC_ae.%s", key));
		return value;
	}

	static Iterator<String> names() {
		return map.keySet().iterator();
	}

	static Iterator<Integer> values() {
		return map.values().iterator();
	}

	static int size() {
		return map.size();
	}

	static HashMap<String, Integer> copy() {
		return new HashMap<String, Integer>(map);
	}

	private static final HashMap<String, Integer> map = getMap();

	private static HashMap<String, Integer> getMap() {
		HashMap<String, Integer> map = new HashMap<String, Integer>(3);
		initMap0(map);
		return map;
	}

	private static void initMap0(HashMap<String, Integer> map) {
		map.put("ae", CC_ae.AE);
		map.put("nb", CC_ae.NB);
		map.put("nc", CC_ae.NC);
	}
}
