// SPDX-License-Identifier: MIT
// Copyright (C) 2018-present iced project and contributors

package com.github.icedland.iced.x86.internal.fmt;

import com.github.icedland.iced.x86.Code;
import com.github.icedland.iced.x86.Instruction;

/** DO NOT USE: INTERNAL API */
public final class FormatterUtils {
	/** DO NOT USE: INTERNAL API */
	public static int getFlowControl(Instruction instruction) {
		switch (instruction.getCode()) {
		// GENERATOR-BEGIN: FormatterFlowControlSwitch
		// ‚ö†Ô∏èThis was generated by GENERATOR!ü¶π‚Äç‚ôÇÔ∏è
		case Code.JO_REL8_16:
		case Code.JO_REL8_32:
		case Code.JO_REL8_64:
		case Code.JNO_REL8_16:
		case Code.JNO_REL8_32:
		case Code.JNO_REL8_64:
		case Code.JB_REL8_16:
		case Code.JB_REL8_32:
		case Code.JB_REL8_64:
		case Code.JAE_REL8_16:
		case Code.JAE_REL8_32:
		case Code.JAE_REL8_64:
		case Code.JE_REL8_16:
		case Code.JE_REL8_32:
		case Code.JE_REL8_64:
		case Code.JNE_REL8_16:
		case Code.JNE_REL8_32:
		case Code.JNE_REL8_64:
		case Code.JBE_REL8_16:
		case Code.JBE_REL8_32:
		case Code.JBE_REL8_64:
		case Code.JA_REL8_16:
		case Code.JA_REL8_32:
		case Code.JA_REL8_64:
		case Code.JS_REL8_16:
		case Code.JS_REL8_32:
		case Code.JS_REL8_64:
		case Code.JNS_REL8_16:
		case Code.JNS_REL8_32:
		case Code.JNS_REL8_64:
		case Code.JP_REL8_16:
		case Code.JP_REL8_32:
		case Code.JP_REL8_64:
		case Code.JNP_REL8_16:
		case Code.JNP_REL8_32:
		case Code.JNP_REL8_64:
		case Code.JL_REL8_16:
		case Code.JL_REL8_32:
		case Code.JL_REL8_64:
		case Code.JGE_REL8_16:
		case Code.JGE_REL8_32:
		case Code.JGE_REL8_64:
		case Code.JLE_REL8_16:
		case Code.JLE_REL8_32:
		case Code.JLE_REL8_64:
		case Code.JG_REL8_16:
		case Code.JG_REL8_32:
		case Code.JG_REL8_64:
		case Code.JMP_REL8_16:
		case Code.JMP_REL8_32:
		case Code.JMP_REL8_64:
		case Code.VEX_KNC_JKZD_KR_REL8_64:
		case Code.VEX_KNC_JKNZD_KR_REL8_64:
			return FormatterFlowControl.SHORT_BRANCH;
		case Code.LOOPNE_REL8_16_CX:
		case Code.LOOPNE_REL8_32_CX:
		case Code.LOOPNE_REL8_16_ECX:
		case Code.LOOPNE_REL8_32_ECX:
		case Code.LOOPNE_REL8_64_ECX:
		case Code.LOOPNE_REL8_16_RCX:
		case Code.LOOPNE_REL8_64_RCX:
		case Code.LOOPE_REL8_16_CX:
		case Code.LOOPE_REL8_32_CX:
		case Code.LOOPE_REL8_16_ECX:
		case Code.LOOPE_REL8_32_ECX:
		case Code.LOOPE_REL8_64_ECX:
		case Code.LOOPE_REL8_16_RCX:
		case Code.LOOPE_REL8_64_RCX:
		case Code.LOOP_REL8_16_CX:
		case Code.LOOP_REL8_32_CX:
		case Code.LOOP_REL8_16_ECX:
		case Code.LOOP_REL8_32_ECX:
		case Code.LOOP_REL8_64_ECX:
		case Code.LOOP_REL8_16_RCX:
		case Code.LOOP_REL8_64_RCX:
		case Code.JCXZ_REL8_16:
		case Code.JCXZ_REL8_32:
		case Code.JECXZ_REL8_16:
		case Code.JECXZ_REL8_32:
		case Code.JECXZ_REL8_64:
		case Code.JRCXZ_REL8_16:
		case Code.JRCXZ_REL8_64:
			return FormatterFlowControl.ALWAYS_SHORT_BRANCH;
		case Code.CALL_REL16:
		case Code.CALL_REL32_32:
		case Code.CALL_REL32_64:
			return FormatterFlowControl.NEAR_CALL;
		case Code.JMP_REL16:
		case Code.JMP_REL32_32:
		case Code.JMP_REL32_64:
		case Code.JO_REL16:
		case Code.JO_REL32_32:
		case Code.JO_REL32_64:
		case Code.JNO_REL16:
		case Code.JNO_REL32_32:
		case Code.JNO_REL32_64:
		case Code.JB_REL16:
		case Code.JB_REL32_32:
		case Code.JB_REL32_64:
		case Code.JAE_REL16:
		case Code.JAE_REL32_32:
		case Code.JAE_REL32_64:
		case Code.JE_REL16:
		case Code.JE_REL32_32:
		case Code.JE_REL32_64:
		case Code.JNE_REL16:
		case Code.JNE_REL32_32:
		case Code.JNE_REL32_64:
		case Code.JBE_REL16:
		case Code.JBE_REL32_32:
		case Code.JBE_REL32_64:
		case Code.JA_REL16:
		case Code.JA_REL32_32:
		case Code.JA_REL32_64:
		case Code.JS_REL16:
		case Code.JS_REL32_32:
		case Code.JS_REL32_64:
		case Code.JNS_REL16:
		case Code.JNS_REL32_32:
		case Code.JNS_REL32_64:
		case Code.JP_REL16:
		case Code.JP_REL32_32:
		case Code.JP_REL32_64:
		case Code.JNP_REL16:
		case Code.JNP_REL32_32:
		case Code.JNP_REL32_64:
		case Code.JL_REL16:
		case Code.JL_REL32_32:
		case Code.JL_REL32_64:
		case Code.JGE_REL16:
		case Code.JGE_REL32_32:
		case Code.JGE_REL32_64:
		case Code.JLE_REL16:
		case Code.JLE_REL32_32:
		case Code.JLE_REL32_64:
		case Code.JG_REL16:
		case Code.JG_REL32_32:
		case Code.JG_REL32_64:
		case Code.JMPE_DISP16:
		case Code.JMPE_DISP32:
		case Code.VEX_KNC_JKZD_KR_REL32_64:
		case Code.VEX_KNC_JKNZD_KR_REL32_64:
			return FormatterFlowControl.NEAR_BRANCH;
		case Code.CALL_PTR1616:
		case Code.CALL_PTR1632:
			return FormatterFlowControl.FAR_CALL;
		case Code.JMP_PTR1616:
		case Code.JMP_PTR1632:
			return FormatterFlowControl.FAR_BRANCH;
		case Code.XBEGIN_REL16:
		case Code.XBEGIN_REL32:
			return FormatterFlowControl.XBEGIN;
		// GENERATOR-END: FormatterFlowControlSwitch

		default:
			throw new UnsupportedOperationException();
		}
	}
}
