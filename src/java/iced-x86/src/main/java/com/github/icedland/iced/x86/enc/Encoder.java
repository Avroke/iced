// SPDX-License-Identifier: MIT
// Copyright (C) 2018-present iced project and contributors

package com.github.icedland.iced.x86.enc;

import com.github.icedland.iced.x86.Instruction;

/**
 * TODO: docs here
 */
public final class Encoder {
	int encoderFlags;
	int internal_PreventVEX2;
	int internal_VEX_WIG_LIG;
	int internal_VEX_LIG;
	int internal_EVEX_WIG;
	int internal_EVEX_LIG;
	int internal_MVEX_WIG;
	int immSize;
	int immediate;

	// GENERATOR-BEGIN: ImmSizes
	// ‚ö†Ô∏èThis was generated by GENERATOR!ü¶π‚Äç‚ôÇÔ∏è
	static final int[] s_immSizes = new int[] {
		0,// NONE
		1,// SIZE1
		2,// SIZE2
		4,// SIZE4
		8,// SIZE8
		3,// SIZE2_1
		2,// SIZE1_1
		4,// SIZE2_2
		6,// SIZE4_2
		1,// RIP_REL_SIZE1_TARGET16
		1,// RIP_REL_SIZE1_TARGET32
		1,// RIP_REL_SIZE1_TARGET64
		2,// RIP_REL_SIZE2_TARGET16
		2,// RIP_REL_SIZE2_TARGET32
		2,// RIP_REL_SIZE2_TARGET64
		4,// RIP_REL_SIZE4_TARGET32
		4,// RIP_REL_SIZE4_TARGET64
		1,// SIZE_IB_REG
		1,// SIZE1_OP_CODE
	};
	// GENERATOR-END: ImmSizes

	void setErrorMessage(String error) {
		throw new UnsupportedOperationException(); // TODO:
	}

	void writePrefixes(Instruction instruction) {
		writePrefixes(instruction, true);
	}

	void writePrefixes(Instruction instruction, boolean canWriteF3) {
		throw new UnsupportedOperationException(); // TODO:
	}

	void writeByteInternal(int b) {
		throw new UnsupportedOperationException(); // TODO:
	}
}
