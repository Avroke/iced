// SPDX-License-Identifier: MIT
// Copyright (C) 2018-present iced project and contributors

// ‚ö†Ô∏èThis file was generated by GENERATOR!ü¶π‚Äç‚ôÇÔ∏è

package com.github.icedland.iced.x86;

/**
 * MVEX register/memory operand conversion
 */
public final class MvexRegMemConv {
	private MvexRegMemConv() {
	}

	/**
	 * No operand conversion
	 */
	public static final int NONE = 0;
	/**
	 * Register swizzle: <code>zmm0</code> or <code>zmm0 {dcba}</code>
	 */
	public static final int REG_SWIZZLE_NONE = 1;
	/**
	 * Register swizzle: <code>zmm0 {cdab}</code>
	 */
	public static final int REG_SWIZZLE_CDAB = 2;
	/**
	 * Register swizzle: <code>zmm0 {badc}</code>
	 */
	public static final int REG_SWIZZLE_BADC = 3;
	/**
	 * Register swizzle: <code>zmm0 {dacb}</code>
	 */
	public static final int REG_SWIZZLE_DACB = 4;
	/**
	 * Register swizzle: <code>zmm0 {aaaa}</code>
	 */
	public static final int REG_SWIZZLE_AAAA = 5;
	/**
	 * Register swizzle: <code>zmm0 {bbbb}</code>
	 */
	public static final int REG_SWIZZLE_BBBB = 6;
	/**
	 * Register swizzle: <code>zmm0 {cccc}</code>
	 */
	public static final int REG_SWIZZLE_CCCC = 7;
	/**
	 * Register swizzle: <code>zmm0 {dddd}</code>
	 */
	public static final int REG_SWIZZLE_DDDD = 8;
	/**
	 * Memory Up/DownConv: <code>[rax]</code> / <code>zmm0</code>
	 */
	public static final int MEM_CONV_NONE = 9;
	/**
	 * Memory UpConv: <code>[rax] {1to16}</code> or <code>[rax] {1to8}</code>
	 */
	public static final int MEM_CONV_BROADCAST1 = 10;
	/**
	 * Memory UpConv: <code>[rax] {4to16}</code> or <code>[rax] {4to8}</code>
	 */
	public static final int MEM_CONV_BROADCAST4 = 11;
	/**
	 * Memory Up/DownConv: <code>[rax] {float16}</code> / <code>zmm0 {float16}</code>
	 */
	public static final int MEM_CONV_FLOAT16 = 12;
	/**
	 * Memory Up/DownConv: <code>[rax] {uint8}</code> / <code>zmm0 {uint8}</code>
	 */
	public static final int MEM_CONV_UINT8 = 13;
	/**
	 * Memory Up/DownConv: <code>[rax] {sint8}</code> / <code>zmm0 {sint8}</code>
	 */
	public static final int MEM_CONV_SINT8 = 14;
	/**
	 * Memory Up/DownConv: <code>[rax] {uint16}</code> / <code>zmm0 {uint16}</code>
	 */
	public static final int MEM_CONV_UINT16 = 15;
	/**
	 * Memory Up/DownConv: <code>[rax] {sint16}</code> / <code>zmm0 {sint16}</code>
	 */
	public static final int MEM_CONV_SINT16 = 16;
}
